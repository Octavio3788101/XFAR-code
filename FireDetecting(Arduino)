import cv2
import numpy as np
import os
import serial
import time

ard = serial.Serial()
ard.port = "COM11"
ard.baudrate = 9600
ard.open()

cascadePath = "C:/Users/Kevin/Documents/cascade_test/haarcascade_frontalface_alt.xml"

#cascadePath = "C:/Users/Kevin/Documents/cascade_test/fire_detection.xml"
faceCascade = cv2.CascadeClassifier(cascadePath);

cam = cv2.VideoCapture(1)
while True:
    ret, img = cam.read()
    #img = cv2.flip(img, -1)  # Flip vertically
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

    faces = faceCascade.detectMultiScale(
        gray,
        scaleFactor=1.1,
        minNeighbors=5,
        minSize=(10, 10),  # (int(minW), int(minH) was 80, smaller for farther range
    )
    for (x, y, w, h) in faces:
        cv2.rectangle(img, (x, y), (x + w, y + h), (0, 255, 0), 2)

        Xpos = x + (w / 2)  # calculates the X coordinate of the center of the face.
        Ypos = y + (h / 2)  # calculates the Y coordinate of the center of the face.
        if Xpos >= 380:
            ard.write('L'.encode())  # The following code check if the face is on the left,
            time.sleep(0.01)  # right, top or bottom,
        elif Xpos <= 260:  # with respect to the center of the frame
            ard.write('R'.encode())  # if any conditions are true, it send a command
            time.sleep(0.01)  # to the arduino through the serial bus.

        if Ypos > 300:
            ard.write('D'.encode())
            time.sleep(0.01)
        elif Ypos < 180:
            ard.write('U'.encode())
            time.sleep(0.01)

        break

    cv2.imshow('XFAR Camera', img)
    key = cv2.waitKey(1)
    if key == 27:
        break

cam.release()
cv2.destroyAllWindows()
